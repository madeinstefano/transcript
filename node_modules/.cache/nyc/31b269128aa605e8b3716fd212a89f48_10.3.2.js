var cov_29p3ebxdyp=function(){var path='/home/stefano/repo/transcript/spec/transcript_yaml_spec.js',hash='ea2106657e696637574efd2285979255abeafb99',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/stefano/repo/transcript/spec/transcript_yaml_spec.js',statementMap:{'0':{start:{line:1,column:13},end:{line:1,column:30}},'1':{start:{line:2,column:17},end:{line:2,column:50}},'2':{start:{line:3,column:11},end:{line:3,column:24}},'3':{start:{line:4,column:13},end:{line:4,column:33}},'4':{start:{line:6,column:15},end:{line:6,column:28}},'5':{start:{line:7,column:15},end:{line:7,column:26}},'6':{start:{line:8,column:15},end:{line:8,column:26}},'7':{start:{line:10,column:0},end:{line:25,column:4}},'8':{start:{line:12,column:2},end:{line:24,column:6}},'9':{start:{line:14,column:17},end:{line:14,column:36}},'10':{start:{line:15,column:19},end:{line:15,column:40}},'11':{start:{line:16,column:19},end:{line:16,column:40}},'12':{start:{line:18,column:4},end:{line:18,column:68}},'13':{start:{line:20,column:19},end:{line:20,column:69}},'14':{start:{line:22,column:4},end:{line:22,column:44}},'15':{start:{line:23,column:4},end:{line:23,column:47}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:10,column:38},end:{line:10,column:39}},loc:{start:{line:10,column:44},end:{line:25,column:1}},line:10},'1':{name:'(anonymous_1)',decl:{start:{line:12,column:82},end:{line:12,column:83}},loc:{start:{line:12,column:94},end:{line:24,column:3}},line:12}},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0},f:{'0':0,'1':0},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const chai=(++cov_29p3ebxdyp.s[0],require('chai'));const execSync=(++cov_29p3ebxdyp.s[1],require('child_process').execSync);const fs=(++cov_29p3ebxdyp.s[2],require('fs'));const yaml=(++cov_29p3ebxdyp.s[3],require('js-yaml'));const should=(++cov_29p3ebxdyp.s[4],chai.should());const expect=(++cov_29p3ebxdyp.s[5],chai.expect);const assert=(++cov_29p3ebxdyp.s[6],chai.assert);++cov_29p3ebxdyp.s[7];describe('Transcripting yaml files',()=>{++cov_29p3ebxdyp.f[0];++cov_29p3ebxdyp.s[8];it('Should apply schema from the base folder to the target making a new file',async()=>{++cov_29p3ebxdyp.f[1];const base=(++cov_29p3ebxdyp.s[9],'res/yaml/base.yml');const target=(++cov_29p3ebxdyp.s[10],'res/yaml/target.yml');const output=(++cov_29p3ebxdyp.s[11],'res/yaml/output.yml');++cov_29p3ebxdyp.s[12];execSync(`node transcript.js yaml ${base} ${target} ${output}`);const result=(++cov_29p3ebxdyp.s[13],yaml.safeLoad(fs.readFileSync(output,'uft8')));++cov_29p3ebxdyp.s[14];expect(result.car.model).to.eql("335i");++cov_29p3ebxdyp.s[15];expect(result.car.goofy).to.eql(undefined);});});
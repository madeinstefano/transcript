var cov_1moom185k3=function(){var path='/home/stefano/repo/transcript/lib/unflatten_object.js',hash='2426e5a2e1aa256372322bc45f7f417cab146bef',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/stefano/repo/transcript/lib/unflatten_object.js',statementMap:{'0':{start:{line:1,column:17},end:{line:1,column:46}},'1':{start:{line:2,column:14},end:{line:2,column:58}},'2':{start:{line:2,column:19},end:{line:2,column:58}},'3':{start:{line:5,column:2},end:{line:7,column:3}},'4':{start:{line:6,column:4},end:{line:6,column:18}},'5':{start:{line:9,column:17},end:{line:9,column:32}},'6':{start:{line:11,column:2},end:{line:22,column:3}},'7':{start:{line:12,column:4},end:{line:21,column:8}},'8':{start:{line:13,column:6},end:{line:20,column:7}},'9':{start:{line:14,column:8},end:{line:16,column:9}},'10':{start:{line:15,column:10},end:{line:15,column:49}},'11':{start:{line:17,column:8},end:{line:17,column:46}},'12':{start:{line:19,column:8},end:{line:19,column:56}},'13':{start:{line:24,column:2},end:{line:24,column:41}},'14':{start:{line:27,column:0},end:{line:41,column:2}},'15':{start:{line:29,column:16},end:{line:29,column:18}},'16':{start:{line:30,column:4},end:{line:37,column:8}},'17':{start:{line:31,column:19},end:{line:31,column:39}},'18':{start:{line:32,column:18},end:{line:32,column:60}},'19':{start:{line:33,column:6},end:{line:35,column:7}},'20':{start:{line:34,column:8},end:{line:34,column:37}},'21':{start:{line:36,column:6},end:{line:36,column:30}},'22':{start:{line:39,column:4},end:{line:39,column:15}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:2,column:14},end:{line:2,column:15}},loc:{start:{line:2,column:19},end:{line:2,column:58}},line:2},'1':{name:'mergeDeep',decl:{start:{line:4,column:9},end:{line:4,column:18}},loc:{start:{line:4,column:41},end:{line:25,column:1}},line:4},'2':{name:'(anonymous_2)',decl:{start:{line:12,column:39},end:{line:12,column:40}},loc:{start:{line:12,column:46},end:{line:21,column:5}},line:12},'3':{name:'(anonymous_3)',decl:{start:{line:30,column:33},end:{line:30,column:34}},loc:{start:{line:30,column:44},end:{line:37,column:5}},line:30}},branchMap:{'0':{loc:{start:{line:5,column:2},end:{line:7,column:3}},type:'if',locations:[{start:{line:5,column:2},end:{line:7,column:3}},{start:{line:5,column:2},end:{line:7,column:3}}],line:5},'1':{loc:{start:{line:11,column:2},end:{line:22,column:3}},type:'if',locations:[{start:{line:11,column:2},end:{line:22,column:3}},{start:{line:11,column:2},end:{line:22,column:3}}],line:11},'2':{loc:{start:{line:11,column:7},end:{line:11,column:41}},type:'binary-expr',locations:[{start:{line:11,column:7},end:{line:11,column:22}},{start:{line:11,column:26},end:{line:11,column:41}}],line:11},'3':{loc:{start:{line:13,column:6},end:{line:20,column:7}},type:'if',locations:[{start:{line:13,column:6},end:{line:20,column:7}},{start:{line:13,column:6},end:{line:20,column:7}}],line:13},'4':{loc:{start:{line:14,column:8},end:{line:16,column:9}},type:'if',locations:[{start:{line:14,column:8},end:{line:16,column:9}},{start:{line:14,column:8},end:{line:16,column:9}}],line:14}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0},f:{'0':0,'1':0,'2':0,'3':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const objProto=(++cov_1moom185k3.s[0],Reflect.getPrototypeOf({}));++cov_1moom185k3.s[1];const isObj=v=>{++cov_1moom185k3.f[0];++cov_1moom185k3.s[2];return Object.getPrototypeOf(v)===objProto;};function mergeDeep(target,...sources){++cov_1moom185k3.f[1];++cov_1moom185k3.s[3];if(!sources.length){++cov_1moom185k3.b[0][0];++cov_1moom185k3.s[4];return target;}else{++cov_1moom185k3.b[0][1];}const source=(++cov_1moom185k3.s[5],sources.shift());++cov_1moom185k3.s[6];if((++cov_1moom185k3.b[2][0],isObj(target))&&(++cov_1moom185k3.b[2][1],isObj(source))){++cov_1moom185k3.b[1][0];++cov_1moom185k3.s[7];Reflect.ownKeys(source).forEach(key=>{++cov_1moom185k3.f[2];++cov_1moom185k3.s[8];if(isObj(source[key])){++cov_1moom185k3.b[3][0];++cov_1moom185k3.s[9];if(!target[key]){++cov_1moom185k3.b[4][0];++cov_1moom185k3.s[10];Object.assign(target,{[key]:{}});}else{++cov_1moom185k3.b[4][1];}++cov_1moom185k3.s[11];mergeDeep(target[key],source[key]);}else{++cov_1moom185k3.b[3][1];++cov_1moom185k3.s[12];Object.assign(target,{[key]:source[key]});}});}else{++cov_1moom185k3.b[1][1];}++cov_1moom185k3.s[13];return mergeDeep(target,...sources);}++cov_1moom185k3.s[14];module.exports={unflatten(flat){const obj=(++cov_1moom185k3.s[15],{});++cov_1moom185k3.s[16];Object.keys(flat).forEach(flatKey=>{++cov_1moom185k3.f[3];const keys=(++cov_1moom185k3.s[17],flatKey.split('.'));let unftn=(++cov_1moom185k3.s[18],{[keys[keys.length-1]]:flat[flatKey]});++cov_1moom185k3.s[19];for(let i=keys.length-1;i--;){++cov_1moom185k3.s[20];unftn={[keys[i]]:unftn};}++cov_1moom185k3.s[21];mergeDeep(obj,unftn);});++cov_1moom185k3.s[22];return obj;}};